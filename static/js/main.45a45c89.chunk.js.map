{"version":3,"sources":["assets/logo-burger-queen.png","session/AuthUserContext.js","constants/routes.js","firebase/firebase.js","firebase/auth.js","components/SignOut/SignOut.js","components/Navigation/Navigation.js","components/SignUp/SignUp.js","components/PasswordForget/PasswordForget.js","components/SignIn/SignIn.js","session/withAuthorization.js","components/CustomerForm/CustomerForm.js","components/MenuDisplay/MenuDisplay.js","components/TakeOrderButtons/TakeOrderButtons.js","components/SendOrder/SendOrder.js","components/Home/Home.js","components/PasswordChange/PasswordChange.js","components/Account/Account.js","components/Page404/Page404.js","session/withAuthentication.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthUserContext","createContext","HOME","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","db","firestore","settings","timestampsInSnapshots","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","console","log","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","SignOutButton","react_default","a","createElement","className","type","onClick","NavigationAuth","href","process","alt","src","logo","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","routes","SignOut_SignOut","NavigationNonAuth","Navigation","session_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","error","byPropKey","propertyName","value","Object","defineProperty","SignUpForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","preventDefault","_this$state","state","history","then","setState","objectSpread","push","catch","_this2","_this$state2","isInvalid","onChange","target","placeholder","disabled","message","Component","SignUpLink","SignUp_SignUp","withRouter","_ref","SignUp_SignUpForm","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SingInForm","SignIn_SingInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","withAuthorization","authCondition","ComponentToRender","WithAuthorization","_Component","apply","arguments","inherits","createClass","key","onAuthStateChanged","CustomerForm","getName","initialName","inputName","bind","MenuDisplay","menu","map","item","index","price","name","toUpperCase","TakeOrderButtons","handleOnClickMenu","orderTaked","selectMenu","allItems","menuSelectedItems","filter","category","order","typesOfMenu","values","data","categories","items","components_MenuDisplay_MenuDisplay","SendOrder","customerName","trim","withoutOrder","scope","e","remove","react_fontawesome_index_es","icon","total","send","employeeUid","clearAll","HomePage","sendOrder","collection","add","employee","status","swal","title","text","confirmButtonColor","toConsumableArray","concat","newTotal","itemToBeRemoved","newOrder","removeIndex","indexOf","splice","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","result","_this3","components_CustomerForm_CustomerForm","fromCustomerForm","components_TakeOrderButtons_TakeOrderButtons","fromTakeOrderButtons","components_SendOrder_SendOrder","uid","fromRemoveItemButtons","cancelOrder","PasswordChangeForm","PasswordChange","Error404Page","withAuthentication","WithAuthentication","Provider","library","fas","faTrashAlt","BrowserRouter","basename","react","components_Navigation_Navigation","Switch","Route","exact","path","component","SignUpPage","SignInPage","AccountPage","Page404","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45a45c89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-burger-queen.6881bea1.png\";","import { createContext } from 'react';\n\nconst AuthUserContext = createContext(null);\n\nexport default AuthUserContext;\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PAGE404 = '/not-found-404';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: \"AIzaSyBh3icoYCT51XZDQGyUW2OWB1wLXFPg9E4\",\n  authDomain: \"burguer-queen-dfeeb.firebaseapp.com\",\n  databaseURL: \"https://burguer-queen-dfeeb.firebaseio.com\",\n  projectId: \"burguer-queen-dfeeb\",\n  storageBucket: \"burguer-queen-dfeeb.appspot.com\",\n  messagingSenderId: \"1084432544607\"\n};\n\nif(!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nexport {\n  auth,\n  db\n}\n","import { auth } from './firebase';\n\n// Sign Up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email,password);\n\n// Sign Out\nexport const doSignOut = () =>{\n  console.log('Adios');\n  auth.signOut();\n}\n\n// Password Reset\nexport const doPasswordReset = (email) =>\n  auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\n","import React from 'react';\n\nimport { auth } from '../../firebase';\nimport './SignOut.css';\n\nconst SignOutButton = () =>\n  <button\n    className=\"button\"\n    type=\"button\"\n    onClick={auth.doSignOut}\n  >\n    Cerrar sesión\n  </button>\n\nexport default SignOutButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthUserContext from '../../session/AuthUserContext';\nimport * as routes from \"../../constants/routes\";\nimport SignOutButton from '../SignOut/SignOut';\nimport './Navigation.css';\nimport logo from '../../assets/logo-burger-queen.png';\n\nconst Navigation = () =>\n  <AuthUserContext.Consumer>\n    { authUser => authUser\n      ? <NavigationAuth />\n      : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n\nconst NavigationAuth = () => (\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-background\">\n  <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + routes.SIGN_IN}>\n    <img alt=\"Burger Queen Logo\" src={logo} id=\"logo-navbar\"/>\n    Burger Queen\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <Link to={routes.HOME} className=\"nav-link\">Ingresar pedido</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to={routes.ACCOUNT} className=\"nav-link\">Perfil</Link>\n      </li>\n      <li className=\"nav-item\">\n        <SignOutButton />\n      </li>\n    </ul>\n  </div>\n</nav>\n);\n\nconst NavigationNonAuth = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-background\">\n    <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + routes.SIGN_IN}>\n      <img alt=\"Burger Queen Logo\" src={logo} id=\"logo-navbar\"/>\n      Burger Queen\n    </a>\n  </nav>\n  );\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\nimport './SignUp.css';\n\nconst SignUpPage = ({ history }) =>\n  <div className=\"center container col-8\">\n    <h1 className=\"mb-3\">Ingresa los datos del nuevo usuario</h1>\n    <SignUpForm history={ history } />\n  </div>\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n}\n\nconst byPropKey = (propertyName, value) => () =>({\n  [propertyName]: value,\n})\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      // eslint-disable-next-line\n      username,\n      email,\n      passwordOne,\n    } = this.state;\n\n    const {\n      history,\n    } = this.props;\n\n    auth.doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error =>{\n        this.setState(byPropKey('error', error));\n      });\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={username}\n          onChange={event => this.setState(byPropKey('username', event.target.value))}\n          type=\"text\"\n          placeholder=\"Nombre Completo\"\n        />\n        <input\n          value={email}\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Correo Electrónico\"\n        />\n        <input\n          value={passwordOne}\n          onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n          type=\"password\"\n          placeholder=\"Contraseña\"\n        />\n        <input\n          value={passwordTwo}\n          onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n          type=\"password\"\n          placeholder=\"Confirmar contraseña\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Registrar\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () =>\n<p>\n  <Link to={routes.SIGN_UP}> Registrar a nuevo usuario</Link>\n</p>\n\nexport default withRouter(SignUpPage);\n\nexport {\n  SignUpForm,\n  SignUpLink,\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst PasswordForgetPage = () =>\n  <div className=\"center container col-8\">\n    <h1 className=\"mb-3\">¿Olvidaste tu contraseña?</h1>\n    <p>Ingresa tu correo electrónico y recibe un email con las instrucciones para restablecerla</p>\n    <PasswordForgetForm />\n  </div>\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n    constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { email } = this.state;\n\n    auth.doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n  }\n\n  render() {\n    const {\n      email,\n      error,\n    } = this.state;\n\n    const isInvalid = email === '';\n\n    return(\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={this.state.email}\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\n          type=\"email\"\n          placeholder=\"Correo electrónico\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Restablecer contraseña\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () =>\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>¿Olvidaste tu contraseña?</Link>\n  </p>\n\nexport default PasswordForgetPage;\n\nexport {\n  PasswordForgetForm,\n  PasswordForgetLink,\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { SignUpLink } from '../SignUp/SignUp';\nimport { PasswordForgetLink } from '../PasswordForget/PasswordForget';\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\nimport logo from '../../assets/logo-burger-queen.png';\nimport './SignIn.css'\n\nconst SignInPage = ({ history }) =>\n  <div className=\"center container col-8\" id=\"sign-in\">\n    <img alt=\"Burger Queen Logo\" src={logo} id=\"logo-bq\"/>\n    <h1 className=\"mb-3\">Iniciar sesión</h1>\n    <SingInForm history={history} />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]:value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n}\n\nclass SingInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      email,\n      password,\n    } = this.state;\n\n    const {\n      history,\n    } = this.props;\n\n    auth.doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(byPropKey('error',error));\n      });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      password === '' ||\n      email === '';\n\n      return (\n        <form onSubmit={this.onSubmit}>\n          <input\n            value={email}\n            onChange={event => this.setState(byPropKey('email', event.target.value))}\n            type=\"text\"\n            placeholder=\"Correo electrónico\"\n          />\n          <input\n            value={password}\n            onChange={event => this.setState(byPropKey('password', event.target.value))}\n            type=\"password\"\n            placeholder=\"Contraseña\"\n          />\n          <button disabled={isInvalid} type=\"submit\">\n            Entrar\n          </button>\n\n          { error && <p>{error.message}</p> }\n        </form>\n      );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport {\n  SingInForm,\n};\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AuthUserContext from './AuthUserContext';\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\n\nconst withAuthorization = (authCondition) => (ComponentToRender) => {\n  class WithAuthorization extends Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => authUser\n            ? <ComponentToRender {...this.props}/>\n            : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization);\n}\n\nexport default withAuthorization;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass CustomerForm extends Component {\n\n  inputName(event){\n    this.props.getName(event.target.value);\n  }\n\n  render() {\n    return (\n      <section>\n        <input\n          value={this.props.initialName}\n          onChange={this.inputName.bind(this)}\n          type=\"text\"\n          placeholder=\"Ingresa el nombre del cliente\"\n          className=\"customer col-6 mr-5\"\n        />\n      </section>\n    );\n  }\n}\n\nCustomerForm.propTypes = {\n  inputName: propTypes.func,\n}\n\nexport default CustomerForm;\n","import React from \"react\";\n\nconst MenuDisplay = props => {\n  // console.log(props.menu);\n\n  if (props.menu === null) {\n    return (\n      <div>\n        <p>Elige un menú para ver los items disponibles</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"menu\">\n      {props.menu.map((item, index) => (\n        <button\n          className=\"option-buttons\"\n          key={index}\n          price={item.price}\n          name={item.name}\n          onClick={() => props.onClick(item.price, item.name)}\n        >\n          {item.name.toUpperCase()+\"\\n $\" + item.price}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default MenuDisplay;\n","import React, { Component } from 'react';\n\nimport MenuDisplay from \"../MenuDisplay/MenuDisplay\";\n\n\nclass TakeOrderButtons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: null,\n      order: []\n    };\n  }\n\n  handleOnClickMenu = (price, name) => {\n    this.props.orderTaked(price, name);\n  }\n\n  selectMenu = (key, allItems) => {\n    const menuSelectedItems = allItems.filter(item => {\n      return item.category === key;\n    });\n    this.setState({menu: menuSelectedItems})\n  };\n\n  render() {\n    // console.log(this.props.data);\n    const typesOfMenu = Object.values(this.props.data.categories);\n\n    return (\n      <div>\n        <div className=\"main-buttons mb-3\">\n          {typesOfMenu.map((type, index) => (\n            <button\n              className=\"menu-buttons\"\n              onClick={() => this.selectMenu(index, this.props.data.items)}\n              key={index}\n            >\n              {type.toUpperCase()}\n            </button>\n          ))}\n        </div>\n        <MenuDisplay menu={this.state.menu} onClick={this.handleOnClickMenu.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default TakeOrderButtons;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./SendOrder.css\";\n\nclass SendOrder extends Component {\n\n  render() {\n    const isInvalid =\n      this.props.customerName.trim() === \"\" || this.props.order.length === 0;\n\n    const withoutOrder =\n      this.props.order.length === 0 || isInvalid === true;\n\n    return (\n      <aside className=\"card\">\n        <div className=\"card-body pb-0\">\n          <p className=\"card-tittle\">Cliente: <span className=\"bold\">{this.props.customerName}</span></p>\n        </div>\n        <div className=\"card-body order\">\n          {this.props.order.length > 0 ? (\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Items</th>\n                  <th>Acción</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.order.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{item.name + \" - $\" + item.price}</td>\n                      <td className=\"text-right\">\n                        <button\n                          onClick={e => this.props.remove(item)}\n                          type=\"button\"\n                          className=\"bnt btn-default btn-small\"\n                        >\n                          <FontAwesomeIcon icon=\"trash\" />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          ) : (\n            <p className=\"text-center\">\"No has agregado items a la orden\"</p>\n          )}\n        </div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n          Items: <span className=\"bold\">{this.props.order.length}</span> - Total: <span className=\"bold\">${this.props.total}</span>\n          </p>\n          <button disabled={isInvalid} onClick={e => this.props.send(this.props.employeeUid)}>Enviar orden</button>\n          <button disabled={withoutOrder} type=\"button\" className=\"btn-danger mb-0\" onClick={e => this.props.clearAll()} >Cancelar orden</button>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default SendOrder;\n","import React, { Component } from \"react\";\nimport swal from 'sweetalert2';\n\nimport withAuthorization from \"../../session/withAuthorization\";\nimport { db } from '../../firebase';\nimport data from \"../../data/menu.json\";\nimport \"./Home.css\";\nimport AuthUserContext from '../../session/AuthUserContext';\n\nimport CustomerForm from \"../CustomerForm/CustomerForm\";\nimport TakeOrderButtons from \"../TakeOrderButtons/TakeOrderButtons\";\nimport SendOrder from \"../SendOrder/SendOrder\";\n\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customerName: \"\",\n      order: [],\n      total: 0\n    };\n  }\n\n  // Get the customer name from component CustomerFrom\n  fromCustomerForm(inputName) {\n    this.setState({\n      customerName: inputName\n    });\n  }\n\n  // Set the order state raising the state from the child of TakeOrderButtons\n  fromTakeOrderButtons(price, name) {\n    this.setState({\n      order: [...this.state.order, { name: name.toUpperCase(), price: price }]\n    });\n    const newTotal = this.state.total + price;\n    this.setState({\n      total: newTotal\n    });\n  }\n\n  // Remove items from the order\n  fromRemoveItemButtons(itemToBeRemoved) {\n    const newOrder = [...this.state.order];\n    const removeIndex = newOrder\n      .map(item => {\n        return item.name;\n      })\n      .indexOf(itemToBeRemoved.name);\n    newOrder.splice(removeIndex, 1);\n    const newTotal = this.state.total - itemToBeRemoved.price;\n    this.setState({\n      order: newOrder,\n      total: newTotal\n    });\n  }\n\n  // Cancel order\n  cancelOrder() {\n    swal({\n      title: '¿Quieres cancelar la orden?',\n      text: \"(Esta acción no se puede revertir)\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#dc3545',\n      cancelButtonColor: '#001f5e',\n      confirmButtonText: 'Si',\n      cancelButtonText: 'No'\n    }).then((result) => {\n      if (result.value) {\n        this.setState({\n          customerName: \"\",\n          menu: null,\n          order: [],\n          total: 0\n        });\n        swal({\n          title: \"¡Listo!\",\n          text: \"La orden ha sido borrada'\",\n          type: \"success\",\n          confirmButtonColor: '#001f5e'\n        })\n      }\n    })\n  }\n\n  // Send order to database\n  sendOrder = (employeeUid) => {\n    console.log(this.state);\n    console.log(this.state.order);\n\n    db.collection(\"orders\").add({\n      order: this.state.order,\n      employee: employeeUid,\n      customerName: this.state.customerName,\n      total: this.state.total,\n      status: \"working\",\n    })\n    .then(()=> {\n      swal({\n        title: \"¡Listo!\",\n        text: \"La orden ha sido enviada'\",\n        type: \"success\",\n        confirmButtonColor: '#001f5e'\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <AuthUserContext.Consumer>\n          {(authUser) => (\n            <div className=\"row\">\n              <div className=\"col-md-7\">\n                <p>1) Ingresa el nombre del cliente</p>\n                <CustomerForm\n                  getName={this.fromCustomerForm.bind(this)}\n                  initialName={this.state.customerName}\n                />\n                <p>2) Toma la orden</p>\n                <TakeOrderButtons\n                  data={data}\n                  orderTaked={this.fromTakeOrderButtons.bind(this)}\n                />\n              </div>\n              <div className=\"col-md-5 mt-3\">\n                <p>3) Verifica el pedido</p>\n                <SendOrder\n                  customerName={this.state.customerName}\n                  order={this.state.order}\n                  employeeUid = {authUser.uid}\n                  total={this.state.total}\n                  remove={this.fromRemoveItemButtons.bind(this)}\n                  clearAll={this.cancelOrder.bind(this)}\n                  send={this.sendOrder.bind(this)}\n                />\n              </div>\n            </div>\n\n          )}\n        </AuthUserContext.Consumer>\n      </div>\n    );\n  }\n}\n\nconst authCondition = authUser => !!authUser;\n\nexport default withAuthorization(authCondition)(HomePage);\n","import React, { Component } from 'react';\n\nimport { auth } from '../../firebase';\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  passwordOne:'',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { passwordOne } = this.state;\n\n    auth.doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n  }\n\n  render() {\n    const {\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={passwordOne}\n          onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n          type='password'\n          placeholder=\"Nueva contraseña\"\n        />\n        <input\n          value={passwordTwo}\n          onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n          type='password'\n          placeholder=\"Confirma nueva contraseña\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Guardar nueva contraseña\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nexport default PasswordChangeForm;\n","import React from 'react';\n\nimport AuthUserContext from '../../session/AuthUserContext';\nimport PasswordChangeForm from '../PasswordChange/PasswordChange';\nimport withAuthorization from '../../session/withAuthorization';\n\nconst AccountPage = () =>\n  <AuthUserContext.Consumer>\n    {authUser =>\n      <div className=\"center container col-8\">\n        <h1>Información de perfil</h1>\n        <p>¿Quieres cambiar tu contraseña?</p>\n        <PasswordChangeForm />\n      </div>\n    }\n  </AuthUserContext.Consumer>\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React from 'react';\n\nconst Error404Page = () =>\n  <div>\n    <h1>Error404 Page</h1>\n  </div>\n\nexport default Error404Page;\n","import React, { Component } from 'react';\n\nimport AuthUserContext from './AuthUserContext';\nimport { firebase } from '../firebase';\n\nconst withAuthentication = (ComponentToRender) => {\n  class WithAuthentication extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <ComponentToRender {...this.props}/>\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return WithAuthentication;\n}\n\nexport default withAuthentication;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Navigation from \"./Navigation/Navigation\";\nimport SignUpPage from \"./SignUp/SignUp\";\nimport SignInPage from \"./SignIn/SignIn\";\nimport PasswordForgetPage from \"./PasswordForget/PasswordForget\";\nimport HomePage from \"./Home/Home\";\nimport AccountPage from \"./Account/Account\";\nimport Page404 from \"./Page404/Page404\";\n\nimport * as routes from \"../constants/routes\";\nimport withAuthentication from '../session/withAuthentication';\nimport './App.css'\n\nlibrary.add(fas, faTrashAlt);\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Fragment>\n        <Navigation />\n        <Switch>\n          <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n          <Route exact path={routes.SIGN_IN} component={SignInPage} />\n          <Route\n            exact\n            path={routes.PASSWORD_FORGET}\n            component={PasswordForgetPage}\n          />\n          <Route exact path={routes.HOME} component={HomePage} />\n          <Route exact path={routes.ACCOUNT} component={AccountPage} />\n          <Route component={Page404} />\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}